<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Quan.ControlLibrary">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Basic/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Basic/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Quan.Styles.ToggleButton.ExpanderIcon" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="{StaticResource Quan.Fonts.FontAwesome}" />
        <Setter Property="FontSize" Value="{StaticResource Quan.FontSize.Bigger}" />
        <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Border}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <TextBlock
                            x:Name="ExpandIcon"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RenderTransformOrigin="0.5 0.5"
                            Text="{StaticResource Quan.FontIcons.Chevron-Down}">
                            <TextBlock.LayoutTransform>
                                <RotateTransform x:Name="ExpandIconRotateTransform" />
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandIconRotateTransform" Storyboard.TargetProperty="Angle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="180" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandIconRotateTransform" Storyboard.TargetProperty="Angle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandIcon" Property="Foreground" Value="{DynamicResource Quan.Brushes.Primary}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ExpandIcon" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Quan.Styles.ToggleButton.ExpanderHeader.Horizontal" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{Binding Path=(local:ExpanderHelper.HorizontalHeaderPadding), RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />

                            <ToggleButton
                                x:Name="ExpanderButton"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5 0.5">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource Quan.Styles.ToggleButton.ExpanderIcon}" TargetType="{x:Type ToggleButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Up">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Quan.Styles.ToggleButton.ExpanderHeader.Vertical" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{Binding Path=(local:ExpanderHelper.HorizontalHeaderPadding), RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="16" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <ToggleButton
                                x:Name="ExpanderButton"
                                Grid.Row="0"
                                VerticalAlignment="Center"
                                IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5 0.5">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource Quan.Styles.ToggleButton.ExpanderIcon}" TargetType="{x:Type ToggleButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Left">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="90" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Right">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="-90" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <ContentPresenter
                                Grid.Row="2"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:QuanExpander}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ForegroundLight}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuanExpander}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <ToggleButton
                                Name="PART_HeaderSite"
                                Background="{TemplateBinding local:ExpanderHelper.HeaderBackground}"
                                BorderThickness="0"
                                Content="{TemplateBinding Header}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Cursor="Hand"
                                DockPanel.Dock="Top"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsTabStop="False"
                                Style="{StaticResource Quan.Styles.ToggleButton.ExpanderHeader.Horizontal}"
                                TextElement.FontSize="{TemplateBinding local:ExpanderHelper.HeaderFontSize}" />

                            <Border Name="PART_ContentSite">
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="ContentSiteScaleTransform" />
                                        <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}, Converter={local:ExpanderRotateAngleConverter}}" />
                                    </TransformGroup>
                                </Border.LayoutTransform>

                                <Grid
                                    Name="PART_ContentPanel"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.LayoutTransform>
                                        <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}, Converter={local:ExpanderRotateAngleConverter}, ConverterParameter=-1}" />
                                    </Grid.LayoutTransform>

                                    <ContentPresenter
                                        Name="PART_Content"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Focusable="False" />

                                </Grid>
                            </Border>
                        </DockPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="PART_ContentPanel"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0"
                                                To="1"
                                                Duration="0:0:0.25" />
                                            <DoubleAnimation
                                                EasingFunction="{StaticResource Quan.EasingFuns.CubicInOut}"
                                                Storyboard.TargetName="ContentSiteScaleTransform"
                                                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                From="0"
                                                To="1"
                                                Duration="0:0:0.25" />
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition To="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="PART_ContentPanel"
                                                Storyboard.TargetProperty="Opacity"
                                                From="1"
                                                To="0"
                                                Duration="0:0:0.20" />
                                            <DoubleAnimation
                                                EasingFunction="{StaticResource Quan.EasingFuns.CubicInOut}"
                                                Storyboard.TargetName="ContentSiteScaleTransform"
                                                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                From="1"
                                                To="0"
                                                Duration="0:0:0.20" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_ContentPanel"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentSiteScaleTransform"
                                            Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_ContentPanel"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentSiteScaleTransform"
                                            Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="PART_HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="PART_HeaderSite" Property="Style" Value="{StaticResource Quan.Styles.ToggleButton.ExpanderHeader.Vertical}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="PART_HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="PART_HeaderSite" Property="Style" Value="{StaticResource Quan.Styles.ToggleButton.ExpanderHeader.Vertical}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="PART_HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="PART_HeaderSite" Property="Style" Value="{StaticResource Quan.Styles.ToggleButton.ExpanderHeader.Horizontal}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter TargetName="PART_HeaderSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="PART_HeaderSite" Property="Style" Value="{StaticResource Quan.Styles.ToggleButton.ExpanderHeader.Horizontal}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>