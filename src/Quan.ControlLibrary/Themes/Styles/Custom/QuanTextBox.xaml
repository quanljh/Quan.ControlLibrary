<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Quan.ControlLibrary"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Basic/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Default/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Storyboard x:Key="Quan.Storyboards.TextBox.GotFocus" o:Freeze="True">
        <DoubleAnimation
            Storyboard.TargetName="PART_GuideMessage"
            Storyboard.TargetProperty="Opacity"
            To="0.2"
            Duration="0:0:0.2" />
    </Storyboard>

    <Storyboard x:Key="Quan.Storyboards.TextBox.LostFocus" o:Freeze="True">
        <DoubleAnimation Storyboard.TargetName="PART_GuideMessage" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
    </Storyboard>

    <ControlTemplate x:Key="Quan.Templates.QuanTextBox.Default" TargetType="{x:Type local:QuanTextBox}">
        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <AdornerDecorator>
                <Border
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding local:BorderHelper.CornerRadius}">
                    <Grid Margin="{TemplateBinding BorderThickness}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />


                        <TextBlock
                            x:Name="PART_GuideMessage"
                            Grid.Column="0"
                            Margin="5,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontFamily="{TemplateBinding FontFamily}"
                            IsHitTestVisible="False"
                            Opacity="{TemplateBinding local:TextBoxHelper.GuideTextOpacity}"
                            Text="{TemplateBinding local:TextBoxHelper.GuideText}"
                            Visibility="{Binding Path=(local:TextBoxHelper.HasText), RelativeSource={RelativeSource TemplatedParent}, Converter={local:BooleanToCollapsedConverter}, ConverterParameter=True}" />

                        <Button
                            x:Name="PART_ClearTextButton"
                            Grid.Column="1"
                            Width="26"
                            local:TextBoxHelper.IsUseClearButton="{TemplateBinding local:TextBoxHelper.IsShowClearButton}"
                            Content="{StaticResource Quan.FontIcons.Close}"
                            Focusable="False"
                            Foreground="{TemplateBinding BorderBrush}"
                            IsTabStop="False"
                            Style="{StaticResource Quan.Styles.Button.FontIcon}"
                            Visibility="Collapsed" />

                        <Border
                            x:Name="PART_DividingLine"
                            Grid.Column="2"
                            Width="1"
                            Margin="0,3"
                            Background="{TemplateBinding BorderBrush}"
                            Visibility="Collapsed" />

                        <Button
                            x:Name="PART_FunctionButton"
                            Grid.Column="3"
                            Width="26"
                            local:TextBoxHelper.IsUseFunctionButton="{TemplateBinding local:TextBoxHelper.IsShowFunctionButton}"
                            Content="{TemplateBinding local:TextBoxHelper.FunctionButtonContent}"
                            Focusable="False"
                            Foreground="{TemplateBinding BorderBrush}"
                            IsTabStop="False"
                            Style="{StaticResource Quan.Styles.Button.FontIcon}"
                            Visibility="{TemplateBinding local:TextBoxHelper.IsShowFunctionButton,
                                                         Converter={local:BooleanToCollapsedConverter}}" />
                    </Grid>
                </Border>
            </AdornerDecorator>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.LightPrimary}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Primary}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_ClearTextButton" Property="IsEnabled" Value="False" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Error}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Validation.HasError" Value="True" />
                    <Condition Property="IsVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource Quan.Templates.ValidationError}" />
            </MultiTrigger>


            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TextBoxHelper.HasText" Value="False" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Quan.Storyboards.TextBox.GotFocus}" />
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Quan.Storyboards.TextBox.LostFocus}" />
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TextBoxHelper.HasText" Value="True" />
                    <Condition Property="local:TextBoxHelper.IsShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ClearTextButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TextBoxHelper.IsShowClearButton" Value="True" />
                    <Condition Property="local:TextBoxHelper.IsShowFunctionButton" Value="True" />
                    <Condition Property="local:TextBoxHelper.HasText" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_DividingLine" Property="Visibility" Value="Visible" />
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Quan.Templates.QuanTextBox.Floating" TargetType="{x:Type local:QuanTextBox}">
        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <AdornerDecorator>
                <Border
                    x:Name="PART_Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding local:BorderHelper.CornerRadius}">
                    <Grid Margin="{TemplateBinding BorderThickness}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <!--<ColumnDefinition Width="Auto" />-->
                        </Grid.ColumnDefinitions>

                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />

                        <local:QuanFloatingText
                            x:Name="PART_GuideMessage"
                            Grid.Column="0"
                            Margin="5,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FloatingOffset="{TemplateBinding local:FloatingTextHelper.FloatingOffset}"
                            FloatingOpacity="{TemplateBinding local:FloatingTextHelper.FloatingOpacity}"
                            FloatingProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static local:FloatingProxyFabricConverter.Instance}}"
                            FloatingScale="{TemplateBinding local:FloatingTextHelper.FloatingScale}"
                            FloatingText="{TemplateBinding local:TextBoxHelper.GuideText}"
                            FontFamily="{TemplateBinding FontFamily}"
                            IsUseFloating="{TemplateBinding local:FloatingTextHelper.IsUseFloating}" />


                        <Button
                            x:Name="PART_ClearTextButton"
                            Grid.Column="1"
                            Width="26"
                            local:TextBoxHelper.IsUseClearButton="{TemplateBinding local:TextBoxHelper.IsShowClearButton}"
                            Content="{StaticResource Quan.FontIcons.Close}"
                            Focusable="False"
                            Foreground="{TemplateBinding BorderBrush}"
                            IsTabStop="False"
                            Style="{StaticResource Quan.Styles.Button.FontIcon}"
                            Visibility="Collapsed" />

                    </Grid>
                </Border>
            </AdornerDecorator>
            <!--  Ripple underline  -->
            <local:QuanRippleLine x:Name="PART_RippleLine" Background="{TemplateBinding local:RippleHelper.Background}" CornerRadius="{TemplateBinding local:BorderHelper.CornerRadius}" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.LightPrimary}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="PART_RippleLine" Property="IsActive" Value="True" />
                <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Primary}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_ClearTextButton" Property="IsEnabled" Value="False" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Error}" />
                <Setter TargetName="PART_RippleLine" Property="Background" Value="{DynamicResource Quan.Brushes.Error}" />
            </Trigger>

            <!--  Trigger the rendering of the AdornerLayer by reSetting the error template  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Validation.HasError" Value="True" />
                    <Condition Property="IsVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource Quan.Templates.ValidationError}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:FloatingTextHelper.IsUseFloating" Value="True" />
                    <Condition Property="IsKeyboardFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_GuideMessage" Property="Foreground" Value="{Binding Path=(local:FloatingTextHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_GuideMessage" Property="FloatingOpacity" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TextBoxHelper.HasText" Value="True" />
                    <Condition Property="local:TextBoxHelper.IsShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ClearTextButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Quan.Styles.QuanTextBox.Default" TargetType="{x:Type local:QuanTextBox}">
        <Setter Property="FontFamily" Value="{StaticResource Quan.Fonts.Regular}" />
        <Setter Property="FontSize" Value="{StaticResource Quan.FontSize.Regular}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource Quan.Brushes.Background}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="CaretBrush" Value="{DynamicResource Quan.Brushes.Primary}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template" Value="{StaticResource Quan.Templates.QuanTextBox.Default}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="local:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="local:ValidationHelper.DisplayMode" Value="Popup" />
        <Setter Property="local:ValidationHelper.Background" Value="{DynamicResource Quan.Brushes.Error}" />
        <Setter Property="local:ValidationHelper.FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=FontSize}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="DisplayMode" Value="Floating">
                <Setter Property="Template" Value="{StaticResource Quan.Templates.QuanTextBox.Floating}" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="local:FloatingTextHelper.Foreground" Value="{DynamicResource Quan.Brushes.Primary}" />
                <Setter Property="local:FloatingTextHelper.IsUseFloating" Value="True" />
                <Setter Property="local:ValidationHelper.Background" Value="Transparent" />
                <Setter Property="local:ValidationHelper.DisplayMode" Value="Text" />
                <Setter Property="local:ValidationHelper.FontSize" Value="10.0" />
                <Setter Property="local:RippleHelper.Background" Value="{DynamicResource Quan.Brushes.Primary}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource Quan.Styles.QuanTextBox.Default}" TargetType="{x:Type local:QuanTextBox}" />

</ResourceDictionary>