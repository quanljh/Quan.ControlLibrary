<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Quan.ControlLibrary.Controls"
    xmlns:helpers="clr-namespace:Quan.ControlLibrary.Helpers">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Basic/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Default/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Quan.Styles.QuanTimePicker.Default" TargetType="{x:Type controls:QuanTimePicker}">
        <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.ForegroundLight}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="ClockHostContentControlStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Setters>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <AdornerDecorator>
                                        <Border Padding="16,8,16,24" Effect="{DynamicResource Quan.ShadowEffects.Effect4}">
                                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                                        </Border>
                                    </AdornerDecorator>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ClockStyle" Value="{DynamicResource Quan.Styles.Clock}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsHeaderVisible" Value="True" />
        <Setter Property="Padding" Value="0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:QuanTimePicker}">
                    <Grid x:Name="PART_Root">
                        <controls:QuanTextBox x:Name="PART_TextBox" />
                        <Button
                            x:Name="PART_Button"
                            Height="30"
                            Margin="0,0,5,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="{StaticResource Quan.FontIcons.Clock}"
                            Focusable="False"
                            Foreground="{Binding ElementName=PART_TextBox, Path=BorderBrush}"
                            Style="{StaticResource Quan.Styles.Button.FontIcon}" />
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            CustomPopupPlacementCallback="{x:Static helpers:CustomPopupPlacementCallbackHelper.LargePopupCallback}"
                            Placement="Custom"
                            PlacementTarget="{Binding ElementName=PART_TextBox}"
                            PopupAnimation="Fade"
                            StaysOpen="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>


    <Style BasedOn="{StaticResource Quan.Styles.QuanTimePicker.Default}" TargetType="{x:Type controls:QuanTimePicker}" />

</ResourceDictionary>
