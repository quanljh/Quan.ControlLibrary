<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachedProperties="clr-namespace:Quan.ControlLibrary.AttachedProperties"
    xmlns:controls="clr-namespace:Quan.ControlLibrary.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Basic/Common.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Quan.ControlLibrary;component/Themes/Styles/Basic/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="Quan.Templates.Button.FontIcon" TargetType="{x:Type Button}">
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter
                x:Name="PART_ContentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value=".75" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Disabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Quan.Styles.Button.BaseBase" BasedOn="{StaticResource Quan.Styles.Common.BaseStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.Border}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="Quan.Styles.Button.Base" BasedOn="{StaticResource Quan.Styles.Button.BaseBase}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Quan.Brushes.ThemeBackground}" />
        <Setter Property="attachedProperties:BorderHelper.CornerRadius" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(attachedProperties:BorderHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <StackPanel
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Orientation="Horizontal">
                            <Path
                                x:Name="IconContent"
                                Width="{TemplateBinding attachedProperties:IconHelper.Width}"
                                Height="{TemplateBinding attachedProperties:IconHelper.Height}"
                                Data="{TemplateBinding attachedProperties:IconHelper.Geometry}"
                                Fill="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="True"
                                Stretch="Uniform" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Margin="6,0,0,0"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="attachedProperties:IconHelper.Geometry" Value="{x:Null}">
                            <Setter TargetName="IconContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Quan.Styles.Button.Icon" BasedOn="{StaticResource Quan.Styles.Button.Base}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="attachedProperties:BorderHelper.CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(attachedProperties:BorderHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentControl
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Path
                                Width="{TemplateBinding attachedProperties:IconHelper.Width}"
                                Height="{TemplateBinding attachedProperties:IconHelper.Height}"
                                Data="{TemplateBinding attachedProperties:IconHelper.Geometry}"
                                Fill="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="True"
                                Stretch="Uniform" />
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Quan.Styles.Button.FontIcon" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource Quan.Fonts.Icon.Regular}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{StaticResource Quan.FontSize.Icon}" />
        <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Border}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource Quan.Templates.Button.FontIcon}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="Quan.Styles.Button.Square" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Quan.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Quan.Brushes.ThemeForeground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontFamily" Value="{StaticResource Quan.Fonts.Regular}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ThemeForeground}" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="3,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <controls:ClipBorder
                            x:Name="Background"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding attachedProperties:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <controls:ContentControlEx
                                x:Name="PART_ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attachedProperties:ControlsHelper.ContentCharacterCasing)}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="{TemplateBinding attachedProperties:ControlsHelper.RecognizesAccessKey}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <controls:ClipBorder
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource Quan.Brushes.Control.Disabled}"
                            CornerRadius="{TemplateBinding attachedProperties:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Quan.Brushes.Button.Square.Background.MouseOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Button.Square.Foreground.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Quan.Brushes.ThemeForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ThemeBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="attachedProperties:ControlsHelper.ContentCharacterCasing" Value="{StaticResource Quan.CharacterCasing.Button.Square}" />
    </Style>

    <Style x:Key="Quan.Styles.Button.Square.Accent" BasedOn="{StaticResource Quan.Styles.Button.Square}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Quan.Brushes.Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ForegroundHighLight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <controls:ClipBorder
                            x:Name="Background"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding attachedProperties:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <controls:ClipBorder
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource Quan.Brushes.Control.Disabled}"
                            CornerRadius="{TemplateBinding attachedProperties:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Rectangle x:Name="MouseOverRectangle" Fill="{DynamicResource Quan.Brushes.Button.AccentedSquare.Background.MouseOver}" Opacity="0" />
                            <controls:ContentControlEx
                                x:Name="PART_ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attachedProperties:ControlsHelper.ContentCharacterCasing)}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="{TemplateBinding attachedProperties:ControlsHelper.RecognizesAccessKey}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Button.AccentedSquare.Foreground.MouseOver}" />
                            <Setter TargetName="MouseOverRectangle" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Quan.Brushes.ThemeForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ThemeBackground}" />
                            <Setter TargetName="MouseOverRectangle" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Gray2}" />
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Quan.Styles.Button.Square.Highlight" BasedOn="{StaticResource Quan.Styles.Button.Square}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Quan.Brushes.Highlight}" />
        <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ForegroundHighLight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <controls:ClipBorder
                            x:Name="Background"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding attachedProperties:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <controls:ClipBorder
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource Quan.Brushes.Control.Disabled}"
                            CornerRadius="{TemplateBinding attachedProperties:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <controls:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attachedProperties:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="{TemplateBinding attachedProperties:ControlsHelper.RecognizesAccessKey}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Quan.Brushes.Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ForegroundHighLight}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Quan.Brushes.ThemeForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.ThemeBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource Quan.Brushes.Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource Quan.Brushes.Gray2}" />
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>